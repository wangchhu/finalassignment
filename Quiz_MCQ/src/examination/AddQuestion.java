/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examination;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author User
 */
public class AddQuestion extends javax.swing.JFrame {

    DbConnection db;
    public int QuestionId;
    public String SubjectName;
    public String query;
    public AddQuestion() throws ClassNotFoundException, SQLException {
        this.db = new DbConnection();
        initComponents();
        addcombo();
        tableData();

        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtQ = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblQuestion = new javax.swing.JLabel();
        lblQuestion1 = new javax.swing.JLabel();
        txtAns = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQ = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtA = new javax.swing.JTextField();
        lblQuestion2 = new javax.swing.JLabel();
        txtB = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtC = new javax.swing.JTextField();
        lblQuestion3 = new javax.swing.JLabel();
        txtD = new javax.swing.JTextField();
        txtSName = new javax.swing.JTextField();
        lblQuestion4 = new javax.swing.JLabel();
        lblQuestion5 = new javax.swing.JLabel();
        chooseSet = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 102));
        setFont(new java.awt.Font("Courier New", 1, 10)); // NOI18N
        setForeground(java.awt.Color.gray);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        jLabel1.setText(":#:#:One of the following options should be correct option");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 480, 50));

        txtQ.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        getContentPane().add(txtQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 350, 31));

        btnSave.setBackground(new java.awt.Color(255, 255, 153));
        btnSave.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 490, 140, 50));

        lblQuestion.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        lblQuestion.setText("Add Question");
        getContentPane().add(lblQuestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, 40));

        lblQuestion1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        lblQuestion1.setText("Question :");
        getContentPane().add(lblQuestion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, 32));

        txtAns.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        getContentPane().add(txtAns, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 350, 33));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 153));

        tblQ.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        tblQ.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Question_ID", "S.N", "Subject", "Set", "Questions", "Answer", "Option A", "Option B", "Option C", "Option D"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblQ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQ);
        if (tblQ.getColumnModel().getColumnCount() > 0) {
            tblQ.getColumnModel().getColumn(0).setMinWidth(0);
            tblQ.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblQ.getColumnModel().getColumn(0).setMaxWidth(0);
            tblQ.getColumnModel().getColumn(1).setMaxWidth(40);
            tblQ.getColumnModel().getColumn(3).setMaxWidth(40);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 700, 430));

        btnUpdate.setBackground(new java.awt.Color(255, 255, 153));
        btnUpdate.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 153, 0));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 490, 150, 50));

        btnDelete.setBackground(new java.awt.Color(255, 255, 153));
        btnDelete.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(204, 0, 51));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 490, 140, 50));

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setText("Option B :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, 130, 33));

        txtA.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        getContentPane().add(txtA, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 200, 30));

        lblQuestion2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        lblQuestion2.setText("Option A :");
        getContentPane().add(lblQuestion2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, 32));

        txtB.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        getContentPane().add(txtB, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, 200, 33));

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel3.setText("Option D :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 390, -1, 33));

        txtC.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        getContentPane().add(txtC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 200, 31));

        lblQuestion3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        lblQuestion3.setText("Option C :");
        getContentPane().add(lblQuestion3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 140, 32));

        txtD.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        getContentPane().add(txtD, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, 200, 33));

        txtSName.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        txtSName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtSName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 350, 31));

        lblQuestion4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        lblQuestion4.setText("Subject : ");
        getContentPane().add(lblQuestion4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 32));

        lblQuestion5.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        lblQuestion5.setText("Set:");
        getContentPane().add(lblQuestion5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, -1, 32));

        chooseSet.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        chooseSet.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        chooseSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseSetActionPerformed(evt);
            }
        });
        getContentPane().add(chooseSet, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 130, 30));

        jLabel4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel4.setText("Answer :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 110, 33));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        SubjectName = txtSName.getText();
//        try {
//            insertCategory();
//            insertSets(); 
            insertQuestion();
//        } catch (SQLException ex) {
//            Logger.getLogger(AddQuestion.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(SubjectName.equals(txtSName.getText()) && chooseSet.getSelectedItem().equals('A'))
        {
            JOptionPane.showMessageDialog(null, "You cannot change the Set and Subject name.");
            txtSName.setText(SubjectName);
            //cboSet.(set);
        }
        else{
                update();
        }
          
    }//GEN-LAST:event_btnUpdateActionPerformed

    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            // TODO add your handling code here:
            query = "Delete questions where question_id = '"+QuestionId+"'";
           db.stm.executeQuery(query);
            JOptionPane.showMessageDialog(null, "Question Deleted !!");
            tableData();
        } catch (SQLException ex) {
            Logger.getLogger(AddQuestion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    Boolean check; 
    public void insertCategory() throws SQLException{
        if(!checkCategory())
        {
            try {
                query = "insert into Categories values('"+SubjectName+"')";
                db.stm.executeQuery(query);
            } catch (SQLException  ex) {
                Logger.getLogger(AddQuestion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    public void update(){
        try {
            // TODO add your handling code here
                query = "Update Questions Set Questions = '"+txtQ.getText()+"', Answers = '"+txtAns.getText()+"'"
                    + ",Option1 = '"+txtA.getText()+"',Option2 = '"+txtB.getText()+"',Option3 = '"+txtC.getText()+"',"
                    + "Option4 = '"+txtD.getText()+"' where question_id = "+QuestionId+"";
                db.stm.executeQuery(query);
                JOptionPane.showMessageDialog(null, "Question updated !!");
                tableData();
            } catch (SQLException ex) {
                Logger.getLogger(AddQuestion.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    public void insertSets() throws SQLException
    {
        if(!checkSet())
        {
            try {
                query = "insert into Sets values('"+chooseSet.getSelectedItem()+"',("+subjectid+"))";
                db.stm.executeQuery(query);
            } catch (SQLException ex) {
                Logger.getLogger(AddQuestion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    public void insertQuestion(){
        if(1==1)
        {
            try {
                query = "INSERT INTO `questions`(`subject`,`Questions`, `Answer`, `Option1`, `Option2`, `Option3`, `Option4`, `Set_code`) VALUES ("+"'"+txtSName.getText()+"','"+ txtQ.getText()+"','"+txtAns.getText()+"','"+txtA.getText()+"','"+txtB.getText()+"','"+txtC.getText()+"','"+txtD.getText()+"','" + chooseSet.getSelectedItem()+"')";
               db.stm.executeUpdate(query);
               
            JOptionPane.showMessageDialog(null,"Question Registered.");
            tableData();
            } catch (SQLException ex) {
                Logger.getLogger(AddQuestion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Question has already been added. Please write another Question.");
        }
    }
    
    public Boolean sameQuestion()
    {
        int counter=0;
        try {
            query = "Select q.Questions,s.Set_code from questions as q,Sets as s "
                    + "where Questions = '"+txtQ.getText()+"'";
            ResultSet rs = db.stm.executeQuery(query);
            while(rs.next()){
                counter++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddQuestion.class.getName()).log(Level.SEVERE, null, ex);
        }
        return counter > 0;
    }
    private void addcombo(){
        chooseSet.removeAllItems();
        chooseSet.addItem("A");
        chooseSet.addItem("B");
        chooseSet.addItem("C");
        chooseSet.addItem("D");
    }
    private void chooseSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseSetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chooseSetActionPerformed

    private void tblQMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQMouseClicked
        // TODO add your handling code here:
        int selectedrow = tblQ.getSelectedRow();
        TableModel model = tblQ.getModel();
        QuestionId = Integer.parseInt(model.getValueAt(selectedrow,0).toString());
        SubjectName = model.getValueAt(selectedrow,2).toString();
        txtSName.setText(SubjectName);
        chooseSet.setSelectedItem(model.getValueAt(selectedrow,3).toString());
        txtQ.setText(model.getValueAt(selectedrow,4).toString());
        txtAns.setText(model.getValueAt(selectedrow,5).toString());
        txtA.setText(model.getValueAt(selectedrow,6).toString());
        txtB.setText(model.getValueAt(selectedrow,7).toString());
        txtC.setText(model.getValueAt(selectedrow,8).toString());
        txtD.setText(model.getValueAt(selectedrow,9).toString());
    }//GEN-LAST:event_tblQMouseClicked

    private void txtSNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSNameActionPerformed

    String subjectid;
    public Boolean checkCategory() throws SQLException{
        query = "Select Category_Id from Categories where Subject = '"+txtSName.getText()+"'";
        ResultSet rs = db.stm.executeQuery(query);
        int counter = 0;
        while(rs.next()){
            counter++;
        }
        subjectid = query;
        return counter > 0;
    }
    String setid;
    public Boolean checkSet() throws SQLException
    {
        int counter = 0;
            query = "Select Set_Id from Sets where Set_code = '"+chooseSet.getSelectedItem()+"' and Category_Id = ("+subjectid+")";
            ResultSet rs = db.stm.executeQuery(query);
            while(rs.next()){
                //setid = rs.getInt("Set_Id");
                counter++;
            }
            setid = query;
        return counter > 0 ;
    }
    private void tableData() throws SQLException{
        clear();
        try{
            DefaultTableModel model = (DefaultTableModel)tblQ.getModel(); 
        query = "Select * from questions where q.question_id = ?"; 
	ResultSet rs = db.stm.executeQuery(query);
        System.out.print(rs);
        int counter =1;
	while (rs.next()){ 
            Object row[] = {rs.getString("question_id"),counter, rs.getString("subject"),
                rs.getString("Set_code"), rs.getString("Questions"), rs.getString("Answer"),
            rs.getString("Option1"), rs.getString("Option2"), rs.getString("Option3"),rs.getString("Option4")};
            model.addRow(row);
            counter++;
        }
        }
        catch(Exception e)
        {
        }
    }
    public void clear(){
        DefaultTableModel model = (DefaultTableModel)tblQ.getModel();
        for(int i=0;i < model.getRowCount(); i = i + 1/2)
        {
            model.removeRow(i);
        }
        txtQ.setText("");
        txtAns.setText("");
        txtA.setText("");
        txtB.setText("");
        txtC.setText("");
        txtD.setText("");
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new AddQuestion().setVisible(true);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(AddQuestion.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> chooseSet;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JLabel lblQuestion1;
    private javax.swing.JLabel lblQuestion2;
    private javax.swing.JLabel lblQuestion3;
    private javax.swing.JLabel lblQuestion4;
    private javax.swing.JLabel lblQuestion5;
    private javax.swing.JTable tblQ;
    private javax.swing.JTextField txtA;
    private javax.swing.JTextField txtAns;
    private javax.swing.JTextField txtB;
    private javax.swing.JTextField txtC;
    private javax.swing.JTextField txtD;
    private javax.swing.JTextField txtQ;
    private javax.swing.JTextField txtSName;
    // End of variables declaration//GEN-END:variables
    
    
}
