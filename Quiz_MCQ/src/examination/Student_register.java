/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examination;

import java.sql.SQLException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author User
 */
public class Student_register extends javax.swing.JFrame {

    /**
     * Creates new form Student
     * @throws java.lang.ClassNotFoundException
     * @throws java.sql.SQLException
     */
    public Student_register() throws ClassNotFoundException, SQLException {
        this.db = new DbConnection();
        initComponents();
        retrieve();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnUp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSt_Data = new javax.swing.JTable();
        btnDel = new javax.swing.JButton();
        btnconfirm = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 102));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setText("Student Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 60, -1, 40));

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel2.setText("Student Registration");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 320, 54));

        jLabel5.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel5.setText("Password");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, 40));

        jLabel6.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel6.setText("UserName");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, -1, 40));

        txtStudentName.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        getContentPane().add(txtStudentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 300, 40));
        txtStudentName.getAccessibleContext().setAccessibleName("");

        txtUserName.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        getContentPane().add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 300, 40));

        jLabel7.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel7.setText("Confirm Password");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, -1, 40));

        btnUp.setBackground(new java.awt.Color(255, 255, 0));
        btnUp.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnUp.setForeground(new java.awt.Color(0, 204, 0));
        btnUp.setText("Update");
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });
        getContentPane().add(btnUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 530, 130, 40));

        jScrollPane1.setAutoscrolls(true);

        tblSt_Data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "S.N", "Student Name", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblSt_Data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSt_DataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSt_Data);
        if (tblSt_Data.getColumnModel().getColumnCount() > 0) {
            tblSt_Data.getColumnModel().getColumn(1).setPreferredWidth(5);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 390, 530, 120));

        btnDel.setBackground(new java.awt.Color(255, 255, 0));
        btnDel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnDel.setForeground(new java.awt.Color(204, 51, 0));
        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });
        getContentPane().add(btnDel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 530, 130, 40));

        btnconfirm.setBackground(new java.awt.Color(255, 255, 51));
        btnconfirm.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        btnconfirm.setForeground(new java.awt.Color(51, 255, 204));
        btnconfirm.setText("Confirm");
        btnconfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconfirmActionPerformed(evt);
            }
        });
        getContentPane().add(btnconfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 330, 240, 40));
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 300, 50));
        getContentPane().add(txtConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 300, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

//    ArrayList list = new ArrayList();
//    ArrayList studentname = new ArrayList();
//    ArrayList batch = new ArrayList();
//    ArrayList username = new ArrayList();
//    ArrayList password = new ArrayList();
    
    DbConnection db;
    
    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        int row = tblSt_Data.getSelectedRow();
        if(row < 0)
        {
            JOptionPane.showMessageDialog(null,"Please Select row to edit that row.");
        }
        else{
            String query = "Update student SET student_name = '"+txtStudentName.getText()+"',"
                + "username = '"+txtUserName.getText()+"', password = '"+txtPassword.getText()+"' where Student_Id = "+StudentId+"";
            if(txtPassword.getText().equals(txtConfirmPassword.getText()))
            {
                try {
                db.manipulate(query);
                JOptionPane.showMessageDialog(null,"updated");
                retrieve();
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(Student_register.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Password Doesn't Matched.");
            }
        }
        
    }//GEN-LAST:event_btnUpActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        // TODO add your handling code here:
         int row = tblSt_Data.getSelectedRow();
        if(row < 0)
        {
            JOptionPane.showMessageDialog(null,"select student for delete");
        }
        else{
            int response = JOptionPane.showConfirmDialog(this, "Are you sure","Confirm",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(response == JOptionPane.YES_OPTION)
            {
                String query = "Delete student where Student_Id = "+StudentId+"";
                try {
                    db.manipulate(query);
                    JOptionPane.showMessageDialog(null,"Successfully deleted");
                    retrieve();
             
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(Student_register.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnconfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconfirmActionPerformed
        // TODO add your handling code here:
        if(validation(txtUserName.getText(),txtPassword.getText(),txtConfirmPassword.getText(),txtStudentName.getText())){
            String query = "insert into student(`student_name`,`username`,`password`) values ('"+txtStudentName.getText()+"','"+txtUserName.getText()+"', '"+txtPassword.getText()+"' )";
            if(txtPassword.getText().equals(txtConfirmPassword.getText()))
            {
                try {
                db.manipulate(query);
                JOptionPane.showMessageDialog(null,"Registered");
                retrieve();
                new Exam_question().setVisible(true);
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(Student_register.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
            else{
                JOptionPane.showMessageDialog(null, "Password not matched");
            }
        }
            
        
    }//GEN-LAST:event_btnconfirmActionPerformed

    public boolean validation(String username, String Password, String cPassword, String std_name)
    {
        if(username == "")
        {
            JOptionPane.showMessageDialog(null,"Please Enter Username");
            return false;
        }
        if(std_name == "")
        {
            JOptionPane.showMessageDialog(null,"Please Enter Student Name");
            return false;
        }
        if(Password == "")
        {
            JOptionPane.showMessageDialog(null,"Please Enter Password");
            return false;
        }
        if(cPassword == "")
        {
            JOptionPane.showMessageDialog(null,"Please Enter Confirm Password");
            return false;
        }
        
        return true;
    }
    int StudentId;
    private void tblSt_DataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSt_DataMouseClicked
        // TODO add your handling code here:
        int row = tblSt_Data.getSelectedRow();
        TableModel model = tblSt_Data.getModel();
        StudentId = Integer.parseInt(model.getValueAt(row, 0).toString());
        txtStudentName.setText(model.getValueAt(row,2).toString());
        txtUserName.setText(model.getValueAt(row,4).toString());
        txtPassword.setText(model.getValueAt(row,5).toString());
        txtConfirmPassword.setText(model.getValueAt(row,5).toString());
    }//GEN-LAST:event_tblSt_DataMouseClicked

    public void retrieve() throws ClassNotFoundException, SQLException
    {
        clear();
        DefaultTableModel model = (DefaultTableModel)tblSt_Data.getModel();   
        String query = "Select * from student"; 
	ResultSet rs = db.stm.executeQuery(query);
        int counter =1;
	while (rs.next()) { 
            Object row[] = {rs.getString("student_Id"),counter, rs.getString("student_name"),rs.getString("username"), rs.getString("password")};
            model.addRow(row);
            counter++;
        }
    }
    
    public void clear(){
        
        DefaultTableModel model = (DefaultTableModel)tblSt_Data.getModel();
        for(int i=0;i < model.getRowCount(); i = i + 1/2)
        {
            model.removeRow(i);
        }
        txtStudentName.setText("");
        txtConfirmPassword.setText("");
        txtUserName.setText("");
        txtPassword.setText("");
    }
    
    
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Student_register().setVisible(true);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(Student_register.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnUp;
    private javax.swing.JButton btnconfirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSt_Data;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtStudentName;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
